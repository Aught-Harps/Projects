#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// LCD setup
LiquidCrystal_I2C lcd(0x27, 16, 2);

// MQ-135 analog pin
#define MQ135_PIN PA0  // change to your ADC pin

// LED indicator pin (built-in LED on PC13)
#define ALERT_LED PC13

// Threshold value (you can change this after testing)
#define MQ135_THRESHOLD 1500  // Example threshold

void setup() {
  // Start Serial
  Serial.begin(9600);
  delay(500);
  Serial.println("Serial Started...");

  // Init LCD
  lcd.init();
  lcd.backlight();

  // Configure LED pin
  pinMode(ALERT_LED, OUTPUT);
  digitalWrite(ALERT_LED, LOW);  // OFF initially

  // Print header
  lcd.setCursor(0, 0);
  lcd.print("Hello STM32");
  Serial.println("Hello STM32");

  lcd.setCursor(0, 1);
  lcd.print("LCD + Serial");
  Serial.println("LCD + Serial");
}

void loop() {
  // Read MQ-135 analog value
  int mq135Value = analogRead(MQ135_PIN);

  // Optional: convert to voltage if needed
  float voltage = mq135Value * (5.0 / 4095.0);  // STM32 ADC default 12-bit: 0-4095

  // Print to Serial
  Serial.print("MQ-135 ADC: "); Serial.print(mq135Value);
  Serial.print("\tVoltage: "); Serial.println(voltage, 2);

  // Print to LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("MQ135 ADC:");
  lcd.setCursor(0, 1);
  lcd.print(mq135Value);

  // --- ALERT CONDITIONS ---
  if (mq135Value == 0) {
    // Sensor not detected or disconnected
    digitalWrite(ALERT_LED, HIGH);  // Turn LED on
    Serial.println("ALERT: Sensor Not Detected!");
  }
  else if (mq135Value > MQ135_THRESHOLD) {
    // Exceeds threshold
    digitalWrite(ALERT_LED, HIGH);
    Serial.println("ALERT: Pollution High!");
  }
  else {
    // Safe condition
    digitalWrite(ALERT_LED, LOW);  
  }

  delay(1000);
}
